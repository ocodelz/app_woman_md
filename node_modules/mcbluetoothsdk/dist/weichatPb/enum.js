"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};module.exports=Enum;var ReflectionObject=require("./object");((Enum.prototype=Object.create(ReflectionObject.prototype)).constructor=Enum).className="Enum";var Namespace=require("./namespace");function Enum(e,t,s,r,i){if(ReflectionObject.call(this,e,s),t&&"object"!==(void 0===t?"undefined":_typeof(t)))throw TypeError("values must be an object");if(this.valuesById={},this.values=Object.create(this.valuesById),this.comment=r,this.comments=i||{},this.reserved=void 0,t)for(var o=Object.keys(t),n=0;n<o.length;++n)"number"==typeof t[o[n]]&&(this.valuesById[this.values[o[n]]=t[o[n]]]=o[n])}Enum.fromJSON=function(e,t){var s=new Enum(e,t.values,t.options,t.comment,t.comments);return s.reserved=t.reserved,s},Enum.prototype.toJSON=function(e){var t=!!e&&Boolean(e.keepComments);return util.toObject(["options",this.options,"values",this.values,"reserved",this.reserved&&this.reserved.length?this.reserved:void 0,"comment",t?this.comment:void 0,"comments",t?this.comments:void 0])},Enum.prototype.add=function(e,t,s){if(!util.isString(e))throw TypeError("name must be a string");if(!util.isInteger(t))throw TypeError("id must be an integer");if(void 0!==this.values[e])throw Error("duplicate name '"+e+"' in "+this);if(this.isReservedId(t))throw Error("id "+t+" is reserved in "+this);if(this.isReservedName(e))throw Error("name '"+e+"' is reserved in "+this);if(void 0!==this.valuesById[t]){if(!this.options||!this.options.allow_alias)throw Error("duplicate id "+t+" in "+this);this.values[e]=t}else this.valuesById[this.values[e]=t]=e;return this.comments[e]=s||null,this},Enum.prototype.remove=function(e){if(!util.isString(e))throw TypeError("name must be a string");var t=this.values[e];if(null==t)throw Error("name '"+e+"' does not exist in "+this);return delete this.valuesById[t],delete this.values[e],delete this.comments[e],this},Enum.prototype.isReservedId=function(e){return Namespace.isReservedId(this.reserved,e)},Enum.prototype.isReservedName=function(e){return Namespace.isReservedName(this.reserved,e)};