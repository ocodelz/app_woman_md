"use strict";var Enum,types,util,_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e};function missing(e){return"missing required '"+e.name+"'"}function decoder(v){return function(e){var a=e.Reader,m=e.types,b=e.util;return function(e,o){e instanceof a||(e=a.create(e));for(var t,r=void 0===o?e.len:e.pos+o,n=new this.ctor;e.pos<r;){var i=e.uint32();if(v.group&&4==(7&i))break;for(var s=i>>>3,u=0,p=!1;u<v.fieldsArray.length;++u){var l=v._fieldsArray[u].resolve(),y=l.name,d=l.resolvedType instanceof Enum?"int32":l.type;if(s==l.id){if(p=!0,l.map)e.skip().pos++,n[y]===b.emptyObject&&(n[y]={}),t=e[l.keyType](),e.pos++,null!=types.long[l.keyType]?null==types.basic[d]?n[y]["object"===(void 0===t?"undefined":_typeof(t))?b.longToHash(t):t]=m[u].decode(e,e.uint32()):n[y]["object"===(void 0===t?"undefined":_typeof(t))?b.longToHash(t):t]=e[d]():null==types.basic[d]?n[y]=m[u].decode(e,e.uint32()):n[y]=e[d]();else if(l.repeated)if(n[y]&&n[y].length||(n[y]=[]),null!=types.packed[d]&&2==(7&i))for(var c=e.uint32()+e.pos;e.pos<c;)n[y].push(e[d]());else null==types.basic[d]?l.resolvedType.group?n[y].push(m[u].decode(e)):n[y].push(m[u].decode(e,e.uint32())):n[y].push(e[d]());else null==types.basic[d]?l.resolvedType.group?n[y]=m[u].decode(e):n[y]=m[u].decode(e,e.uint32()):n[y]=e[d]();break}}p||(console.log("t",i),e.skipType(7&i))}for(u=0;u<v._fieldsArray.length;++u){var f=v._fieldsArray[u];if(f.required&&!n.hasOwnProperty(f.name))throw util.ProtocolError(missing(f),{instance:n})}return n}}}(module.exports=decoder)._configure=function(){Enum=require("./enum"),types=require("./types"),util=require("./util")};